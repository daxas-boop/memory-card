{"version":3,"sources":["assets/images/Kirito.jpg","assets/images/Hisoka.jpeg","assets/images/Luffy.jpg","assets/images/Zoro.jpg","assets/images/Netero.jpg","assets/images/Killua.jpg","assets/images/Ippo.jpg","assets/images/Lelouch.jpg","assets/images/Mirtha.jpg","assets/images/Edward.jpg","assets/images/Trump.jpg","assets/images/ZeroTwo.jpg","components/GameCard.js","components/cards.js","components/Header.js","components/Memorycard.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","GameCard","props","classes","onClickCards","name","anime","src","Grid","item","onClick","Card","className","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","Typography","align","gutterBottom","variant","color","cards","KiritoImg","ZeroTwoImg","HisokaImg","LuffyImg","ZoroImg","NeteroImg","KilluaImg","IppoImg","LelouchImg","MirthaImg","EdwardImg","TrumpImg","theme","subtitle","flexGrow","breakpoints","up","Header","score","bestScore","AppBar","Toolbar","container","paddingTop","MemoryCard","useState","initialCards","setCards","winningCards","setWinningCards","setScore","setBestScore","onClickCard","includes","i","length","j","Math","floor","random","randomizeCards","useEffect","Fragment","direction","justify","alignItems","spacing","map","card","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,uLCSrCC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,OAiCCC,EA7BE,SAACC,GACd,IAAMC,EAAUN,IACTO,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,MAAOC,EAAOL,EAAPK,IAElC,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,QAAS,kBAAMN,EAAaC,KACnC,kBAACM,EAAA,EAAD,CAAMC,UAAWT,EAAQJ,MACrB,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,UAAU,MACVC,IAAKX,EACLY,OAAO,MACPC,MAAOX,EACPY,MAAOd,IAEP,kBAACe,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,cAAY,EAACC,QAAQ,KAAKT,UAAU,MAC1DV,GAEL,kBAACgB,EAAA,EAAD,CAAYC,MAAM,SAASE,QAAQ,QAAQC,MAAM,gBAAgBV,UAAU,KACtET,Q,4MCyCVoB,EA/DD,CACV,CACIrB,KAAK,SACLC,MAAM,mBACNC,IAAIoB,KAER,CACItB,KAAK,WACLC,MAAM,wBACNC,IAAIqB,KAER,CACIvB,KAAK,eACLC,MAAM,kBACNC,IAAIsB,KAER,CACIxB,KAAK,kBACLC,MAAM,YACNC,IAAIuB,KAER,CACIzB,KAAK,eACLC,MAAM,YACNC,IAAIwB,KAER,CACI1B,KAAK,eACLC,MAAM,kBACNC,IAAIyB,KAER,CACI3B,KAAK,iBACLC,MAAM,kBACNC,IAAI0B,KAER,CACI5B,KAAK,kBACLC,MAAM,iBACNC,IAAI2B,KAER,CACI7B,KAAK,uBACLC,MAAM,aACNC,IAAI4B,KAER,CACI9B,KAAK,iBACLC,MAAM,kBACNC,IAAI6B,KAER,CACI/B,KAAK,eACLC,MAAM,sBACNC,IAAI8B,KAER,CACIhC,KAAK,eACLC,MAAM,QACNC,IAAI+B,M,wBClENzC,EAAYC,aAAW,SAACyC,GAAD,MAAY,CACvCC,SAAU,CACRC,SAAU,GAEZtB,MAAM,aACJsB,SAAU,GACPF,EAAMG,YAAYC,GAAG,MAAQ,CAC9BF,SAAU,QAyBDG,EApBA,SAAC1C,GACZ,IAAMC,EAAUN,IACTgD,EAAoB3C,EAApB2C,MAAOC,EAAa5C,EAAb4C,UACd,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC3B,EAAA,EAAD,CAAYG,QAAQ,KAAKZ,UAAWT,EAAQgB,MAAOG,MAAM,UAAzD,eAGA,kBAACD,EAAA,EAAD,CAAaT,UAAWT,EAAQqC,UAAhC,UACYK,GAEZ,kBAACxB,EAAA,EAAD,CAAaT,UAAWT,EAAQqC,UAAhC,eACiBM,MCxB3BjD,EAAYC,aAAW,SAACyC,GAAD,MAAY,CACvCU,UAAU,CACRC,WAAY,QA8DDC,EA1DK,WAChB,IAAMhD,EAAUN,IADM,EAEIuD,mBAASC,GAFb,mBAEf3B,EAFe,KAER4B,EAFQ,OAGmBF,mBAAS,IAH5B,mBAGfG,EAHe,KAGAC,EAHA,OAIIJ,mBAAS,GAJb,mBAIfP,EAJe,KAIRY,EAJQ,OAKYL,mBAAS,GALrB,mBAKfN,EALe,KAKJY,EALI,KAehBC,EAAc,SAACtD,GACbkD,EAAaK,SAASvD,IACtBmD,EAAgB,IAChBC,EAAS,KAETD,EAAgB,GAAD,mBAAKD,GAAL,CAAmBlD,KAClCoD,EAASZ,EAAQ,IAErBS,EAhBmB,SAAC5B,GACpB,IAAK,IAAImC,EAAInC,EAAMoC,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACnC,EAAMqC,GAAIrC,EAAMmC,IAAvCnC,EAAMmC,GAFgC,KAE5BnC,EAAMqC,GAFsB,KAI3C,OAAOrC,EAWEyC,CAAezC,KAO5B,OAJA0C,qBAAU,WACFvB,EAAQC,GAAaY,EAAab,KACxC,CAACA,EAAOC,IAGN,kBAAC,IAAMuB,SAAP,KACI,kBAAC,EAAD,CACIxB,MAAOA,EACPC,UAAWA,IAEf,kBAACtC,EAAA,EAAD,CACAI,UAAWT,EAAQ8C,UACnBA,WAAS,EACTqB,UAAU,MACVC,QAAQ,SACRC,WAAW,aACXC,QAAS,GAER/C,EAAMgD,KAAI,SAAAC,GAAI,OACX,kBAAC,EAAD,CACIvE,aAAcuD,EACdiB,IAAKD,EAAKtE,KACVA,KAAMsE,EAAKtE,KACXC,MAAOqE,EAAKrE,MACZC,IAAKoE,EAAKpE,YCrDfsE,MAPf,WAEE,OACI,kBAAC,EAAD,OCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3055aa27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Kirito.bcbd030d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hisoka.3b321f01.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Luffy.58a63fac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zoro.54dffcab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Netero.3b1bb249.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Killua.1bc1031d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ippo.357908ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lelouch.9ca8e2b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mirtha.e731e04f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Edward.4042aa95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Trump.e96c186a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ZeroTwo.d684bc05.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n  },\n});\n\nconst GameCard = (props) => {\n    const classes = useStyles();\n    const {onClickCards, name, anime, src} = props\n\n    return (\n        <Grid item onClick={() => onClickCards(name)}>\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                    component=\"img\"\n                    alt={name}\n                    height=\"300\"\n                    image={src}\n                    title={name}\n                    />\n                    <CardContent>\n                    <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h2\">\n                        {name}\n                    </Typography>\n                    <Typography align=\"center\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {anime}\n                    </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default GameCard;","import KiritoImg from './../assets/images/Kirito.jpg'\nimport HisokaImg from './../assets/images/Hisoka.jpeg'\nimport LuffyImg from './../assets/images/Luffy.jpg'\nimport ZoroImg from './../assets/images/Zoro.jpg'\nimport NeteroImg from './../assets/images/Netero.jpg'\nimport KilluaImg from './../assets/images/Killua.jpg'\nimport IppoImg from './../assets/images/Ippo.jpg'\nimport LelouchImg from './../assets/images/Lelouch.jpg'\nimport MirthaImg from './../assets/images/Mirtha.jpg'\nimport EdwardImg from './../assets/images/Edward.jpg'\nimport TrumpImg from './../assets/images/Trump.jpg'\nimport ZeroTwoImg from './../assets/images/ZeroTwo.jpg'\n\nconst cards = [\n    {\n        name:'Kirito',\n        anime:'Sword Art Online',\n        src:KiritoImg\n    },\n    {\n        name:'Zero Two',\n        anime:'Darling in the Franxx',\n        src:ZeroTwoImg\n    },\n    {\n        name:'Hisoka Morow',\n        anime:'Hunter x Hunter',\n        src:HisokaImg\n    },\n    {\n        name:'Monkey D. Luffy',\n        anime:'One Piece',\n        src:LuffyImg\n    },\n    {\n        name:'Roronoa Zoro',\n        anime:'One Piece',\n        src:ZoroImg\n    },\n    {\n        name:'Isaac Netero',\n        anime:'Hunter x Hunter',\n        src:NeteroImg\n    },\n    {\n        name:'Killua Zoldyck',\n        anime:'Hunter x Hunter',\n        src:KilluaImg\n    },\n    {\n        name:'Makunouchi Ippo',\n        anime:'Hajime no Ippo',\n        src:IppoImg\n    },\n    {\n        name:'Lelouch vi Britannia',\n        anime:'Code Geass',\n        src:LelouchImg\n    },\n    {\n        name:'Mirtha Legrand',\n        anime:'Error not found',\n        src:MirthaImg\n    },\n    {\n        name:'Edward Elric',\n        anime:'Fullmetal Alchemist',\n        src:EdwardImg\n    },\n    {\n        name:'Donald Trump',\n        anime:'USA ?',\n        src:TrumpImg\n    },\n]\n\nexport default cards;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  subtitle: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n      [theme.breakpoints.up('md')]: {\n      flexGrow: 3,\n    }\n  }\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();\n    const {score, bestScore} = props\n    return (\n        <AppBar >\n            <Toolbar>\n                <Typography variant=\"h4\" className={classes.title} align='center'>\n                    Memory Card\n                </Typography>\n                <Typography  className={classes.subtitle}>\n                    Score: {score}\n                </Typography>\n                <Typography  className={classes.subtitle}>\n                    Best score: {bestScore}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GameCard from './GameCard';\nimport initialCards from './cards'\nimport Grid from '@material-ui/core/Grid';\nimport Header from './Header'\n\nconst useStyles = makeStyles((theme) => ({\n  container:{\n    paddingTop: 82,\n  }\n}));\n\nconst MemoryCard  = () => {\n    const classes = useStyles();\n    const [cards, setCards] = useState(initialCards)\n    const [winningCards , setWinningCards] = useState([])\n    const [score, setScore] = useState(0)\n    const [bestScore, setBestScore] = useState(0)\n\n    const randomizeCards = (cards) => {\n        for (let i = cards.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [cards[i], cards[j]] = [cards[j], cards[i]];\n        }\n        return cards\n    }\n\n    const onClickCard = (name) => {\n        if (winningCards.includes(name)){\n            setWinningCards([])\n            setScore(0)\n        } else {\n            setWinningCards([...winningCards, name])\n            setScore(score + 1)\n        }\n        setCards(randomizeCards(cards))\n    }\n\n    useEffect(()=>{\n        if (score > bestScore) { setBestScore(score) }\n    },[score, bestScore])\n\n    return (\n        <React.Fragment>\n            <Header\n                score={score}\n                bestScore={bestScore}\n            />\n            <Grid\n            className={classes.container}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={2}\n            >\n            {cards.map(card => (\n                <GameCard\n                    onClickCards={onClickCard}\n                    key={card.name}\n                    name={card.name}\n                    anime={card.anime}\n                    src={card.src}\n                ></GameCard>\n            ))}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default MemoryCard","import React from 'react';\nimport MemoryCard from './components/Memorycard'\n\nfunction App() {\n \n  return (\n      <MemoryCard></MemoryCard>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}